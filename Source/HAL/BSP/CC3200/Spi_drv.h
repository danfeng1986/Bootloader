/***************************************************************
 * Copyright (C), 2015-2025, H&T Tech
 * File name    : Spi_drv.h
 * Author       : fu chan hao
 * Version      : V1.0.0
 * Date         : 2015-08-04
 * Description  : 
 * Others       : 
***************************************************************/

#ifndef _SPI_DRV_H_
#define _SPI_DRV_H_

/******************************************************
*                 includes
******************************************************/
#include "..\Spi_config.h"

/******************************************************
*                 Macros
******************************************************/

/******************************************************
*                Constants
******************************************************/

/******************************************************
*               Enumerations
******************************************************/

/******************************************************
*             Type Definitions
******************************************************/

/******************************************************
*               Structures
******************************************************/

/******************************************************
*               Function Declarations
******************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_enable(SPIID_e SPIID);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_disable(SPIID_e SPIID);                
/********************************************************************************/

/********************************************************************************/     
HETRetVal_e  SPI_drv_PRCMPeripheralClkEnable(SPIID_e SPIID, T32U prcm);                           
/********************************************************************************/ 

/********************************************************************************/  
HETRetVal_e  SPI_drv_PRCMPeripheralReset(SPIID_e SPIID, T32U prcm);                             
/********************************************************************************/  

/********************************************************************************/
HETRetVal_e  SPI_drv_reset(SPIID_e SPIID);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_configSetExpClk(SPIID_e SPIID, T32U prcm, T32U bitRate,
                                     T32U mode, T32U subMode, T32U config);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_dataGetNonBlocking(SPIID_e SPIID, T32U* pData);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_dataGet(SPIID_e SPIID, T32U* pData);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_dataPutNonBlocking(SPIID_e SPIID, T32U data);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_dataPut(SPIID_e SPIID, T32U data);     
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_fifoEnable(SPIID_e SPIID, T32U flag);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_fifoDisable(SPIID_e SPIID, T32U flag);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_fifoLevelSet(SPIID_e SPIID, T32U txLevel, T32U rxLevel);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_fifoLevelGet(SPIID_e SPIID, T32U* pTxLevel, T32U* pRxLevel);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_wordCountSet(SPIID_e SPIID, T32U wordCount);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_intRegister(SPIID_e SPIID, P_SPI_INT_ENTRY  entry);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_intUnregister(SPIID_e SPIID);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_intEnable(SPIID_e SPIID, T32U intFlag);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_intDisable(SPIID_e SPIID, T32U intFlag);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_intStatus(SPIID_e SPIID, TBOOL maskedflag, T32U* pIntStatus);  
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_intClear(SPIID_e SPIID, T32U intFlag);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_csEnable(SPIID_e SPIID);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_csDisable(SPIID_e SPIID);                
/********************************************************************************/

/********************************************************************************/
HETRetVal_e  SPI_drv_transfer(SPIID_e SPIID, T8U* pDout, 
                              T8U* pDin, T32U count, T32U csEn);      
/********************************************************************************/

#endif /*_SPI_DRV_H_*/
